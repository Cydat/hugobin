# 将Hugo静态内容部署到 GitHub Pages 的简易工作流程
name: Hugo build and deploy
on:
  push:
  # 仅在推送到默认分支时运行。
    branches: [ main ]
    paths:
      - 'assets/**'
      - 'config/**'
      - 'content/**'
      - 'data/**'
      - 'static/**'
      - 'themes/**'
  workflow_run:
    workflows: ['Update theme']
    types:
      - completed
  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:

#  设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          # use the environment variable HUGO_VERSION as the hugo version, if not set, use `latest`.
          hugo-version: ${{ vars.HUGO_VERSION || 'latest' }}
          extended: true
      - name: Hugo build
        run: hugo --gc --minify --logLevel info
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only the public directory
          path: './public'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

